[
    "```json\n{\n  \"category\": \"User Registration\",\n  \"features\": [\n    {\n      \"featureName\": \"Farmer account creation\",\n      \"flow\": \"1.  **User Role:** Farmer\\n    *   **Action:** Clicks on 'Register' or 'Sign Up' button.\\n    *   **System:** Displays the registration form.\\n2.  **User Role:** Farmer\\n    *   **Action:** Fills in the registration form with required information (e.g., name, email, phone number, password).\\n    *   **System:** Validates the input fields.\\n3.  **User Role:** Farmer\\n    *   **Action:** Submits the registration form.\\n    *   **System:** Sends a verification email to the provided email address.\\n4.  **User Role:** Farmer\\n    *   **Action:** Checks email and clicks the verification link.\\n    *   **System:** Verifies the email and activates the account. Redirects to the login page.\\n5.  **User Role:** Farmer\\n    *   **Action:** Logs in using the registered credentials.\\n    *   **System:** Redirects to the farmer's dashboard.\",\n      \"screens\": [\n        \"Registration Screen: Allows farmers to input their details (name, email, phone number, password, etc.) and submit the registration form.\",\n        \"Email Verification Screen: Displays a message confirming that a verification email has been sent.\",\n        \"Login Screen: Allows farmers to log in using their registered email and password.\",\n        \"Farmer Dashboard: The landing page after successful login, displaying account information and options.\"\n      ]\n    },\n    {\n      \"featureName\": \"Bank account verification for authenticity\",\n      \"flow\": \"1.  **User Role:** Farmer\\n    *   **Action:** During registration or in the profile settings, the farmer enters their bank account details (bank name, account number, account holder name).\\n    *   **System:** Displays a form to input bank details.\\n2.  **User Role:** Farmer\\n    *   **Action:** Submits the bank account details.\\n    *   **System:** Initiates a verification process (e.g., through a third-party API or manual review).\\n3.  **User Role:** System (Automated or Manual)\\n    *   **Action:** Verifies the bank account details. This could involve checking against a database, sending a small deposit, or requiring the farmer to upload a bank statement.\\n    *   **System:** Updates the farmer's account status based on the verification result.\\n4.  **User Role:** System\\n    *   **Action:** If verification is successful, the farmer's account is marked as verified.\\n    *   **System:** Displays a confirmation message.\\n5.  **User Role:** System\\n    *   **Action:** If verification fails, the farmer is notified and asked to correct the information or provide additional documentation.\\n    *   **System:** Displays an error message and provides instructions.\",\n      \"screens\": [\n        \"Bank Account Details Input Screen: A form where farmers enter their bank account information.\",\n        \"Verification in Progress Screen: Displays a message indicating that the bank account is being verified.\",\n        \"Verification Success Screen: Confirms successful bank account verification.\",\n        \"Verification Failure Screen: Displays an error message and instructions for resolving verification issues.\",\n        \"Farmer Profile Screen: Displays the farmer's account information, including bank account status.\"\n      ]\n    }\n  ]\n}\n```",
    "```json\n{\n  \"category\": \"Product Listing\",\n  \"features\": [\n    {\n      \"featureName\": \"Product posting by farmers\",\n      \"flow\": \"1. **Farmer** logs into their account.\\n2. **Farmer** navigates to the 'My Products' or 'Sell Products' section.\\n3. **Farmer** clicks on a 'Add New Product' button.\\n4. **Farmer** fills in the product details form (see detailed description below).\\n5. **Farmer** uploads product images.\\n6. **Farmer** reviews the product listing.\\n7. **Farmer** submits the product listing.\\n8. **System** validates the product listing (e.g., checks for required fields).\\n9. **System** displays a confirmation message if successful, or error messages if not.\\n10. **System** makes the product visible to customers (after potential admin approval, if applicable).\",\n      \"screens\": [\n        \"Product Listing Dashboard: Displays a list of the farmer's current product listings, with options to edit, delete, or add new products.\",\n        \"Add New Product Form: A form with fields for product name, category, description, price, quantity, and other relevant details. Includes image upload functionality.\",\n        \"Product Image Upload: Allows farmers to upload multiple images of their product.\",\n        \"Product Preview Screen: Displays a preview of the product listing as it will appear to customers.\",\n        \"Confirmation Screen: Confirms successful product listing submission or displays error messages.\"\n      ]\n    },\n    {\n      \"featureName\": \"Detailed product descriptions\",\n      \"flow\": \"1. **Farmer** is on the 'Add New Product' or 'Edit Product' screen.\\n2. **Farmer** finds the 'Description' field.\\n3. **Farmer** enters a detailed description of the product, including information about its origin, quality, and any other relevant details.\\n4. **Farmer** saves the product listing.\\n5. **System** stores the detailed description.\\n6. **Customer** views the product details page and sees the detailed description.\",\n      \"screens\": [\n        \"Add New Product Form: Includes a rich text editor or a large text area for entering detailed product descriptions.\",\n        \"Product Details Page (Customer View): Displays the detailed product description entered by the farmer.\"\n      ]\n    },\n    {\n      \"featureName\": \"Product image uploads\",\n      \"flow\": \"1. **Farmer** is on the 'Add New Product' or 'Edit Product' screen.\\n2. **Farmer** clicks on the 'Upload Images' button or area.\\n3. **Farmer** selects image files from their device.\\n4. **System** uploads the images.\\n5. **System** displays the uploaded images (e.g., thumbnails).\\n6. **Farmer** can add, remove, or reorder images.\\n7. **Farmer** saves the product listing.\\n8. **System** stores the images associated with the product.\\n9. **Customer** views the product details page and sees the uploaded images.\",\n      \"screens\": [\n        \"Add New Product Form: Includes an image upload section with options to upload, preview, and manage images.\",\n        \"Product Details Page (Customer View): Displays the product images in a gallery or carousel format.\"\n      ]\n    },\n    {\n      \"featureName\": \"Pricing information\",\n      \"flow\": \"1. **Farmer** is on the 'Add New Product' or 'Edit Product' screen.\\n2. **Farmer** finds the 'Price' field.\\n3. **Farmer** enters the price of the product (e.g., per unit, per kg).\\n4. **Farmer** may also enter information about pricing variations (e.g., bulk discounts).\\n5. **Farmer** saves the product listing.\\n6. **System** stores the pricing information.\\n7. **Customer** views the product details page and sees the price.\",\n      \"screens\": [\n        \"Add New Product Form: Includes a 'Price' field and potentially fields for quantity and unit of measure.\",\n        \"Product Details Page (Customer View): Displays the product price clearly.\"\n      ]\n    },\n    {\n      \"featureName\": \"Additional product details\",\n      \"flow\": \"1. **Farmer** is on the 'Add New Product' or 'Edit Product' screen.\\n2. **Farmer** finds fields for additional product details (e.g., weight, origin, harvest date, organic certification).\\n3. **Farmer** fills in the relevant details.\\n4. **Farmer** saves the product listing.\\n5. **System** stores the additional product details.\\n6. **Customer** views the product details page and sees the additional details.\",\n      \"screens\": [\n        \"Add New Product Form: Includes fields for various product attributes, such as weight, origin, and any certifications.\",\n        \"Product Details Page (Customer View): Displays the additional product details in an organized manner.\"\n      ]\n    }\n  ]\n}\n```",
    "```json\n{\n  \"category\": \"Online Sales\",\n  \"features\": [\n    {\n      \"featureName\": \"Online Product Search\",\n      \"flow\": \"1. **User (Customer):** Navigates to the Hailua website.\\n2. **User (Customer):** Uses the search bar to enter keywords (e.g., \\\"mangoes\\\", \\\"rice\\\").\\n3. **System:** Displays a list of products matching the search query.\\n4. **User (Customer):** Filters and sorts the search results (e.g., by price, location, farmer rating).\\n5. **System:** Refreshes the product list based on the applied filters and sorting options.\\n6. **User (Customer):** Clicks on a product to view its details.\",\n      \"screens\": [\n        \"Homepage: Contains a search bar and potentially featured products.\",\n        \"Search Results Page: Displays a list of products matching the search query, with filtering and sorting options.\",\n        \"Product Detail Page: Displays detailed information about a selected product.\"\n      ]\n    },\n    {\n      \"featureName\": \"Product Comparison\",\n      \"flow\": \"1. **User (Customer):** Browses products on the search results page or product detail pages.\\n2. **User (Customer):** Selects products to compare (e.g., by clicking a \\\"Compare\\\" button or checking a checkbox).\\n3. **System:** Adds the selected products to a comparison list.\\n4. **User (Customer):** Navigates to the comparison view.\\n5. **System:** Displays a side-by-side comparison of the selected products, highlighting key features (price, farmer, description, etc.).\\n6. **User (Customer):** Reviews the comparison and makes a purchasing decision.\",\n      \"screens\": [\n        \"Search Results Page: Displays products with a 'Compare' option (e.g., a checkbox or button).\",\n        \"Product Detail Page: Displays products with a 'Compare' option.\",\n        \"Comparison Page: Displays a side-by-side comparison of selected products.\"\n      ]\n    },\n    {\n      \"featureName\": \"Online Purchasing\",\n      \"flow\": \"1. **User (Customer):** Browses products and adds desired items to their shopping cart.\\n2. **User (Customer):** Reviews the items in their shopping cart.\\n3. **User (Customer):** Proceeds to checkout.\\n4. **System:** Prompts the user to log in or register (if not already logged in).\\n5. **User (Customer):** Enters shipping address and selects a shipping option.\\n6. **User (Customer):** Selects a payment method.\\n7. **User (Customer):** Reviews the order summary, including items, shipping, and total cost.\\n8. **User (Customer):** Confirms the order.\\n9. **System:** Processes the payment.\\n10. **System:** Sends order confirmation to the customer and the farmer.\\n11. **System:** Updates the order status (e.g., 'Processing', 'Shipped', 'Delivered').\",\n      \"screens\": [\n        \"Product Detail Page: Includes an 'Add to Cart' button.\",\n        \"Shopping Cart Page: Displays items added to the cart, with options to modify quantities or remove items.\",\n        \"Checkout Page: Includes sections for shipping address, shipping options, payment method selection, and order summary.\",\n        \"Order Confirmation Page: Displays a summary of the completed order and confirmation details.\",\n        \"Order History Page: Displays a list of past orders and their statuses.\"\n      ]\n    },\n    {\n      \"featureName\": \"Basic e-commerce transactions\",\n      \"flow\": \"This feature encompasses the entire process of buying and selling products on the platform, from product listing to order fulfillment. It involves multiple steps and user roles, including farmers listing products, customers searching and purchasing, and the system facilitating the transactions.\\n\\n1. **Farmer:** Lists products with details (see Product Listing feature).\\n2. **Customer:** Searches for products (see Online Product Search feature).\\n3. **Customer:** Compares products (see Product Comparison feature).\\n4. **Customer:** Adds products to cart and purchases (see Online Purchasing feature).\\n5. **System:** Processes payment (see Payment Processing feature).\\n6. **System:** Notifies Farmer of new order.\\n7. **Farmer:** Prepares and ships the order (Shipping Integration feature).\\n8. **System:** Updates order status.\\n9. **Customer:** Receives the order.\\n10. **System:** Disburses funds to the farmer (Payment Processing feature).\",\n      \"screens\": [\n        \"Product Listing Screens (Farmer): Screens related to product creation and management.\",\n        \"Search Results Page (Customer): Displays products.\",\n        \"Product Detail Page (Customer): Displays product details.\",\n        \"Shopping Cart Page (Customer): Displays items in the cart.\",\n        \"Checkout Page (Customer): For entering shipping and payment information.\",\n        \"Order Confirmation Page (Customer): Confirms the order.\",\n        \"Order Management Screens (Farmer): Screens for managing orders and updating statuses.\",\n        \"Order History Page (Customer): Displays past orders.\"\n      ]\n    }\n  ]\n}\n```",
    "```json\n{\n  \"category\": \"Payment Processing\",\n  \"features\": [\n    {\n      \"featureName\": \"Secure online payment systems\",\n      \"flow\": \"1. **Customer (Buyer):** Initiates a purchase by adding products to their cart and proceeding to checkout.\\n2. **Customer (Buyer):** Selects a preferred payment method (e.g., Credit Card, e-Wallet, Bank Transfer).\\n3. **System:** Redirects the customer to the selected payment gateway.\\n4. **Customer (Buyer):** Enters payment details on the secure payment gateway.\\n5. **Payment Gateway:** Processes the payment and sends a success/failure response to the platform.\\n6. **System:** Updates the order status based on the payment gateway's response.\\n7. **System:** Notifies both the customer and the farmer about the payment status (success or failure).\\n8. **System:** Holds the payment securely until the product is shipped and delivered (Escrow).\\n9. **System:** Releases payment to the farmer upon successful delivery confirmation.\",\n      \"screens\": [\n        \"Checkout Screen: Displays order summary and payment method selection.\",\n        \"Payment Gateway Redirection Screen: Informs the user they are being redirected to a secure payment gateway.\",\n        \"Payment Gateway Input Screen: Hosted by the payment gateway; where the user enters their payment details.\",\n        \"Payment Confirmation Screen: Displays payment confirmation or failure message.\",\n        \"Order Details Screen (Customer): Shows the order status and payment details.\",\n        \"Order Details Screen (Farmer): Shows the order status and payment details.\"\n      ]\n    },\n    {\n      \"featureName\": \"Farmer earnings disbursement\",\n      \"flow\": \"1. **System:** Monitors order status and delivery confirmation.\\n2. **System:** Upon successful delivery confirmation by the customer, the system triggers the earnings disbursement process.\\n3. **System:** Calculates the farmer's earnings (total sales amount minus any platform fees).\\n4. **System:** Initiates a transfer of funds to the farmer's verified bank account.\\n5. **Payment Gateway/Bank:** Processes the transfer.\\n6. **System:** Updates the farmer's account balance and transaction history.\\n7. **System:** Sends a notification to the farmer confirming the earnings disbursement.\\n8. **Farmer:** Can view their earnings and transaction history on their dashboard.\",\n      \"screens\": [\n        \"Delivery Confirmation Screen (Customer): Allows the customer to confirm receipt of the order.\",\n        \"Admin Dashboard (Optional): For administrators to monitor and manage payment disbursements.\",\n        \"Farmer Dashboard: Displays the farmer's account balance, transaction history, and pending earnings.\",\n        \"Transaction Details Screen (Farmer): Shows detailed information about a specific transaction, including fees and disbursement status.\",\n        \"Bank Account Verification Screen (Farmer): Allows the farmer to verify or update their bank account details.\"\n      ]\n    }\n  ]\n}\n```",
    "```json\n{\n  \"category\": \"Shipping Integration\",\n  \"features\": [\n    {\n      \"featureName\": \"Home delivery arrangement\",\n      \"flow\": \"1. **Customer:** Searches for and selects products.\\n2. **Customer:** Adds products to cart.\\n3. **Customer:** Proceeds to checkout.\\n4. **Customer:** Enters shipping address (or selects from saved addresses).\\n5. **System:** Calculates shipping costs based on address and product details (weight, dimensions, distance).\\n6. **System:** Presents shipping options (e.g., standard, express) and costs.\\n7. **Customer:** Selects a shipping option.\\n8. **Customer:** Reviews order and shipping details.\\n9. **Customer:** Confirms order and makes payment.\\n10. **System:** Notifies farmer of new order and shipping details.\\n11. **Farmer:** Prepares the order for shipment.\\n12. **Farmer:** Packages the products and prepares for pickup/drop-off.\\n13. **Farmer/System:** (Depending on integration) Farmer schedules a pickup or prints a shipping label.\\n14. **Shipping Provider:** Collects the package from the farmer or receives it at a drop-off location.\\n15. **Shipping Provider:** Transports the package to the customer.\\n16. **System:** Provides tracking information to the customer.\\n17. **Customer:** Receives the package.\\n18. **Customer:** (Optional) Confirms delivery and/or provides feedback.\",\n      \"screens\": [\n        \"Product Detail Screen: Displays product information, including weight and dimensions (used for shipping calculation).\",\n        \"Shopping Cart Screen: Displays items in the cart, with a 'Proceed to Checkout' button.\",\n        \"Checkout Screen: Includes a shipping address form (with address suggestions/autofill) and a shipping options section.\",\n        \"Shipping Options Screen: Displays available shipping methods, costs, and estimated delivery times.\",\n        \"Order Confirmation Screen: Summarizes the order details, including shipping information and total cost.\",\n        \"Order History Screen (Customer): Displays order status and tracking information.\",\n        \"Order Details Screen (Farmer): Displays order details, including shipping address and selected shipping method.\",\n        \"Shipping Label Generation Screen (Farmer/System): Allows the farmer to generate and print shipping labels (if integrated).\",\n        \"Tracking Information Screen (Customer/Farmer): Displays the current status of the shipment.\"\n      ]\n    },\n    {\n      \"featureName\": \"Integrated shipping solutions\",\n      \"flow\": \"1. **System:** Integrates with shipping providers (e.g., VNPost, Viettel Post).\\n2. **Farmer:** When listing a product, the farmer specifies product dimensions and weight.\\n3. **Customer:** During checkout, the system uses the shipping provider's API to calculate shipping costs based on the customer's address, product details, and selected shipping options.\\n4. **Customer:** Chooses a shipping option provided by the integrated shipping provider.\\n5. **System:** Generates a shipping label (if applicable) and provides it to the farmer.\\n6. **Farmer:** Packages the product and attaches the shipping label.\\n7. **Farmer:** Drops off the package at the shipping provider's location or schedules a pickup.\\n8. **Shipping Provider:** Delivers the package to the customer.\\n9. **System:** Tracks the shipment and provides tracking information to both the customer and the farmer.\",\n      \"screens\": [\n        \"Product Listing Screen (Farmer): Includes fields for entering product weight and dimensions.\",\n        \"Checkout Screen (Customer): Displays shipping options and costs provided by integrated shipping providers.\",\n        \"Order Confirmation Screen (Customer): Shows the selected shipping option and cost.\",\n        \"Order Details Screen (Farmer): Displays shipping details, including the selected shipping provider and tracking information.\",\n        \"Shipping Label Generation Screen (Farmer/System): Allows the farmer to generate and print shipping labels (if integrated).\",\n        \"Tracking Information Screen (Customer/Farmer): Displays the current status of the shipment, pulled from the shipping provider's API.\",\n        \"Settings/Integration Screen (Admin/System): Allows for the configuration and management of shipping provider integrations (API keys, etc.).\"\n      ]\n    }\n  ]\n}\n```"
]